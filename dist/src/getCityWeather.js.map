{"version":3,"sources":["../../src/getCityWeather.js"],"names":["React","require","Axios","CityWeather","createClass","render","request","XMLHttpRequest","query","props","city","weatherData","$","ajax","async","type","url","success","result","name","main","weather","description","temp","flexDirection","marginLeft","toLowerCase","remButton","float","remCity","Math","round","e","refs","cityName","id","remFav","module","exports"],"mappings":";;AAAA;;;AAGA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,QAAQD,QAAQ,OAAR,CAAZ;;AAEA;AACA,IAAIE,cAAcH,MAAMI,WAAN,CAAkB;AAAA;;;AAEhCC,YAAQ,kBAAY;AAChB,YAAIC,UAAU,IAAIC,cAAJ,EAAd;AACA,YAAIC,QAAQ,sDAAsD,KAAKC,KAAL,CAAWC,IAAjE,GAAwE,yCAApF;AACA,YAAIC,cAAc,EAAlB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAC,UAAEC,IAAF,CACI,EAAIC,OAAO,KAAX;AACIC,kBAAM,KADV;AAEIC,iBAAKR,KAFT;AAGIS,qBAAS,iBAAUC,MAAV,EAAkB;AACvB;AACAP,4BAAYQ,IAAZ,GAAmBD,OAAOC,IAA1B;AACAR,4BAAYS,IAAZ,GAAmBF,OAAOG,OAAP,CAAe,CAAf,EAAkBD,IAArC;AACAT,4BAAYW,WAAZ,GAA0BJ,OAAOG,OAAP,CAAe,CAAf,EAAkBC,WAA5C;AACAX,4BAAYY,IAAZ,GAAmBL,OAAOE,IAAP,CAAYG,IAA/B;AACA;AACH;AAVL,SADJ;AAcA;;AAEA;AACA,eAAQ;AAAA;AAAA,cAAK,OAAO,EAAEC,eAAe,KAAjB,EAAwBC,YAAY,EAApC,EAAZ;AACI;AAAA;AAAA,kBAAI,IAAId,YAAYQ,IAAZ,GAAmBR,YAAYQ,IAAZ,CAAiBO,WAAjB,EAAnB,GAAoD,IAA5D,EAAkE,KAAI,UAAtE;AAAkFf,4BAAYQ;AAA9F,aADJ;AAEM,iBAAKV,KAAL,CAAWkB,SAAX,GAAuB;AAAA;AAAA,kBAAQ,MAAK,QAAb,EAAsB,WAAU,gBAAhC,EAAiD,OAAO,EAAEC,OAAO,OAAT,EAAxD,EAA2E,SAAU,KAAKC,OAA1F;AAAA;AAAA,aAAvB,GAA6I,IAFnJ;AAGI;AAAA;AAAA;AAAA;AAAelB,4BAAYS,IAA3B;AAAA;AAA2CT,4BAAYW;AAAvD,aAHJ;AAII;AAAA;AAAA;AAAA;AAAaQ,qBAAKC,KAAL,CAAWpB,YAAYY,IAAvB,IAA+B,GAA5C;AAAA;AAAA;AAJJ,SAAR;AAOH,KAlD+B;;AAoDhC;AACAM,aAAS,iBAASG,CAAT,EAAW;AAChB,YAAIH,UAAU,KAAKI,IAAL,CAAUC,QAAV,CAAmBC,EAAjC;AACA,aAAK1B,KAAL,CAAW2B,MAAX,CAAkBP,OAAlB;AAEH;;AAzD+B,CAAlB,CAAlB;;AA8DA;AACAQ,OAAOC,OAAP,GAAiBnC,WAAjB","file":"getCityWeather.js","sourcesContent":["/**\r\n * Created by Johns on 6/6/2017.\r\n */\r\nvar React = require('react');\r\nvar Axios = require('axios');\r\n\r\n// Weather information api subcomponent\r\nvar CityWeather = React.createClass({\r\n\r\n    render: function () {\r\n        var request = new XMLHttpRequest();\r\n        var query = \"http://api.openweathermap.org/data/2.5/weather?q=\" + this.props.city + \"&appid=2e53d90b411afb0bfef965f318b48dbb\";\r\n        var weatherData = {};\r\n\r\n        //API request alternatives\r\n        // request.open('GET', query, true);\r\n        // request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n        // console.log(request.responseText);\r\n        // request.onreadystatechange = function () {\r\n        //     if (request.readyState === 4 && request.status === 200) {\r\n        //         weatherData = JSON.parse(request.responseText);\r\n        //     }\r\n        //     else if (request.readyState === 4 && request.status !== 200) {\r\n        //         alert('error');\r\n        //     }\r\n        //     request.send();\r\n        // };\r\n        // Axios.get(query).then(function (response) {\r\n        //     console.log(response.data);\r\n        //     weatherData = JSON.parse(response.text);\r\n        // });\r\n\r\n        //AJAX request to openweather api\r\n        $.ajax(\r\n            {   async: false,\r\n                type: 'GET',\r\n                url: query,\r\n                success: function (result) {\r\n                    //Parsing response data into JSON objects\r\n                    weatherData.name = result.name;\r\n                    weatherData.main = result.weather[0].main;\r\n                    weatherData.description = result.weather[0].description;\r\n                    weatherData.temp = result.main.temp;\r\n                    // console.log(weatherData);\r\n                }\r\n            }\r\n        );\r\n        // console.log(weatherData);\r\n\r\n        // Rendering Weather Info for requested city\r\n        return (<div style={{ flexDirection: 'row', marginLeft: 50}}>\r\n                    <h3 id={weatherData.name ? weatherData.name.toLowerCase() : null} ref=\"cityName\">{weatherData.name}</h3>\r\n                    { this.props.remButton ? <button type=\"button\" className=\"btn btn-danger\" style={{ float: 'right'}} onClick={ this.remCity }>Remove</button> : null }\r\n                    <h4>Forecast: {weatherData.main} , mostly {weatherData.description}</h4>\r\n                    <span>Temp: {Math.round(weatherData.temp) - 273} 'C</span>\r\n           </div>\r\n        )\r\n    },\r\n\r\n    //Process Remove button click and pass to main component\r\n    remCity: function(e){\r\n        var remCity = this.refs.cityName.id;\r\n        this.props.remFav(remCity);\r\n\r\n    }\r\n\r\n\r\n});\r\n\r\n//Export subcomponent for use across other components\r\nmodule.exports = CityWeather;"]}